type map ([a], (a) -> b) -> [b];
func map ([], f) = [];
func map (x:xs, f) = f(x) : map (xs, f);

type square (Int) -> Int;
func square (n) = n ^ 2;

out(map ([1,2,3,4], square));


type filter ((a) -> Bool, [a]) -> [a];
func filter (f, []) = [];
func filter (f, (x:xs)) = {
    if (f(x)) {
        return (x : filter (f, xs));
    };

    return (filter (f, xs));
};

type isEven (Int) -> Bool;
func isEven (n) = n % 2 == 0;

out(filter(isEven, [1,2,3,4]));
