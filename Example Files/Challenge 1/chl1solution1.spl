-- Challenge 1, solution 1
setIn([0,1]);

as = in(0);
bs = in(1);

while (hasElems(2, as)) {
    out(popN(2, as));
    out(pop(bs));
};

if (isEmpty(as) == False) {
    out(pop(as));
};

/* heyll func */
-- Challenge 1, solution 1
-- type solve ((Itr Int)*, (Itr Int)*) -> NoneType;
-- func solve (*[], *bs) = None;
-- func solve (*[a], *bs) = out([a]);
-- func solve (*(a1:a2:as), *(b:bs)) = {
--     out([a1,a2,b]);
--     solve(as, bs);
-- };

-- setIn([0,1]);

-- solve(in(0), in(1));
