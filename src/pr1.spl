-- Challenge 1

-- Only accept streams a and b (index 0 and 1)
setIn([0,1]);

type solve (*Stream, *Stream) -> [Int];
func solve (*(a1:a2:as), *(b:bs)) = [a1, a2, b]

-- While there's enough input
while (hasElems(2, in(0)) && !isEmpty(in(1))) {
    out(solve(in(0), in(1)));
};

-- If there's one more left in stream a, then print it out
if (!isEmpty(in(0))) {
    out(pop(in(0)));
};
