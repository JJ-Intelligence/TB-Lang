
type f ([b], [b]) -> b ~ (Eq b);
func f (a:as, b:bs) = {
    out(1);
    return(1);
};

out(f([1], [1]) > 2);

x = {
    out(1);
    return (True);
};

out(x + 2);

-- [TList a, TList b] ~ [(b, CEq)]
-- [[a,as], [b,bs]]

-- try {

--     head []


-- } catch (b) ~ (Exception b)


-- IndexOutOfBound
-- StreamOutOfInput
